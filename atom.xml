<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Brainchild Projects</title>
    <subtitle>A Filipino developer&#x27;s projects, thoughts, and experiments</subtitle>
    <link rel="self" type="application/atom+xml" href="https://brainchildprojects.com/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://brainchildprojects.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-03-30T00:00:08+00:00</updated>
    <id>https://brainchildprojects.com/atom.xml</id>
    <entry xml:lang="en">
        <title>Diligence</title>
        <published>2024-03-30T00:00:08+00:00</published>
        <updated>2024-03-30T00:00:08+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/diligence/"/>
        <id>https://brainchildprojects.com/projects/diligence/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/diligence/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Close Sourcing as Strategy</title>
        <published>2024-03-04T00:00:00+08:00</published>
        <updated>2024-03-04T00:00:00+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/close-sourcing-as-strategy/"/>
        <id>https://brainchildprojects.com/posts/close-sourcing-as-strategy/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/posts/close-sourcing-as-strategy/">&lt;p&gt;Today I felt really upset about something that I shouldn’t have to be. I needed to add a tool to an open-source project I’m working on, and after some searching on the web, I found one that I could use. But then I learned that the project had been moved to a paid service after being open source for a while. I felt betrayed and unreasonably angry, even though I understood perfectly why the developers chose to do this.&lt;&#x2F;p&gt;
&lt;p&gt;To be clear, I don’t hate the developers. I just hate that we have to live like this. Because we as individuals are trapped in this exploitative system, we are forced to do some of these maneuvers to prevent our own exploitation – a perfectly rational response in a hostile environment. However, I feel that while the strategies we employ ensure our individual survival within the hostile system, those inadvertently contribute to the system’s continued existence, thereby perpetuating the very conditions that necessitate those strategies.&lt;&#x2F;p&gt;
&lt;p&gt;We play the game, and the game goes on.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Exceptions are Part of the Interface</title>
        <published>2024-02-26T15:20:00+08:00</published>
        <updated>2024-02-26T15:20:00+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/exceptions-are-part-of-the-interface/"/>
        <id>https://brainchildprojects.com/posts/exceptions-are-part-of-the-interface/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/posts/exceptions-are-part-of-the-interface/">&lt;p&gt;I think I’ve known this for a long time now but it’s only today that I’ve fully articulated this by myself. A lot of smarter people have talked about this before but it’s only today that I’ve put this idea into words on my own.&lt;&#x2F;p&gt;
&lt;p&gt;The reason why I appreciate Go’s “errors as values” approach and the enums in Rust is that in those languages, I tend to write functions&#x2F;methods that are more explicit in their behavior. I tend to declare this behavior in the interface itself.&lt;&#x2F;p&gt;
&lt;p&gt;Exception handling as a strategy adds some cognitive tax to my code. Those exceptions are part of the interface even when they are not explicitly declared.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>shfonts</title>
        <published>2023-04-10T00:00:08+00:00</published>
        <updated>2023-04-10T00:00:08+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/shfonts/"/>
        <id>https://brainchildprojects.com/projects/shfonts/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/shfonts/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Printables</title>
        <published>2021-07-03T12:19:08+00:00</published>
        <updated>2021-07-03T12:19:08+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/printables/"/>
        <id>https://brainchildprojects.com/projects/printables/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/printables/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Release Tools</title>
        <published>2021-03-14T06:29:06+00:00</published>
        <updated>2021-03-14T06:29:06+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/release-tools/"/>
        <id>https://brainchildprojects.com/projects/release-tools/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/release-tools/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Happy Birthday, Dinosaur</title>
        <published>2019-04-09T00:33:48+08:00</published>
        <updated>2019-04-09T00:33:48+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/happy-birthday-dinosaur/"/>
        <id>https://brainchildprojects.com/posts/happy-birthday-dinosaur/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/posts/happy-birthday-dinosaur/">&lt;p&gt;Happy birthday, Dinosaur. You’re still here and that’s awesome.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Okee!</title>
        <published>2018-07-06T22:59:48+00:00</published>
        <updated>2018-07-06T22:59:48+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/okee/"/>
        <id>https://brainchildprojects.com/projects/okee/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/okee/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks Part 3: Pondo Cleanup</title>
        <published>2017-10-12T00:08:01+08:00</published>
        <updated>2017-10-12T00:08:01+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-3-pondo-cleanup/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-3-pondo-cleanup/</id>
        
        <summary type="html">&lt;p&gt;This is Part 3 of a series of posts about refactoring
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Nitrolinks&lt;&#x2F;a&gt;
out of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt;. Last time we’ve
&lt;a href=&quot;https:&#x2F;&#x2F;brainchildprojects.com&#x2F;posts&#x2F;refactoring-nitrolinks-part-2-tests-for-a-rails-engine&#x2F;&quot;&gt;successfully copied the Nitrolinks tests from Pondo&lt;&#x2F;a&gt;
but left the original tests on Pondo. This time we’ll move them out of Pondo for
good.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks, Part 2: Tests for a Rails Engine</title>
        <published>2017-10-11T18:00:33+08:00</published>
        <updated>2017-10-11T18:00:33+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-2-tests-for-a-rails-engine/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-2-tests-for-a-rails-engine/</id>
        
        <summary type="html">&lt;p&gt;This is Part 2 of a series of posts about refactoring
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Nitrolinks&lt;&#x2F;a&gt;
out of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt;. Last time we’ve
&lt;a href=&quot;https:&#x2F;&#x2F;brainchildprojects.com&#x2F;posts&#x2F;refactoring-nitrolinks-part-1-creating-a-gem&#x2F;&quot;&gt;successfully moved Nitrolinks out of Pondo&lt;&#x2F;a&gt;
but we left most of the Nitrolinks-specific tests on the Pondo source code
itself. This time we’ll move the tests to Nitrolinks so we can narrow Pondo’s
test concerns.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks, Part 1: Creating a Gem</title>
        <published>2017-09-20T06:33:29+08:00</published>
        <updated>2017-09-20T06:33:29+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-1-creating-a-gem/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-1-creating-a-gem/</id>
        
        <summary type="html">&lt;p&gt;I am building &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt; as an experiment on how
to build a functional, modern web application without necessarily using a large
front-end framework (e.g. Angular, Ember, React). The idea is to mostly develop
applications as one would within the usual semantics of the normal
Request-Response cycle. If you’ve used &lt;a href=&quot;https:&#x2F;&#x2F;yuilibrary.com&#x2F;yui&#x2F;docs&#x2F;pjax&#x2F;&quot;&gt;Pjax&lt;&#x2F;a&gt;,
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turbolinks&#x2F;turbolinks&quot;&gt;Turbolinks&lt;&#x2F;a&gt; then you’re familiar
with this.</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Nitrolinks</title>
        <published>2017-09-19T16:44:06+00:00</published>
        <updated>2017-09-19T16:44:06+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/nitrolinks/"/>
        <id>https://brainchildprojects.com/projects/nitrolinks/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/nitrolinks/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ideas &amp; Execution</title>
        <published>2017-09-05T23:01:01+08:00</published>
        <updated>2017-09-05T23:01:01+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/ideas-execution/"/>
        <id>https://brainchildprojects.com/posts/ideas-execution/</id>
        
        <summary type="html">&lt;p&gt;Ideas are cheap. That’s great. Expend just a few calories and after a while, we
have a lot of them. Executing on them is harder.</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Style Guide</title>
        <published>2017-08-30T21:47:01+08:00</published>
        <updated>2017-08-30T21:47:01+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/style-guide/"/>
        <id>https://brainchildprojects.com/style-guide/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/style-guide/">&lt;h1 id=&quot;headings-with-paragraphs&quot;&gt;Headings with paragraphs&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;h1-heading&quot;&gt;h1. Heading&lt;&#x2F;h1&gt;
&lt;p&gt;The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public&#x2F; directory, our home page is public&#x2F;index.html.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;h2-heading&quot;&gt;h2. Heading&lt;&#x2F;h2&gt;
&lt;p&gt;When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;h3-heading&quot;&gt;h3. Heading&lt;&#x2F;h3&gt;
&lt;p&gt;Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content&#x2F; directory and template files in your themes&#x2F; directory. It will create HTML files in your public&#x2F; directory. You can change this by specifying alternate locations in the configuration file.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;h4-heading&quot;&gt;h4. Heading&lt;&#x2F;h4&gt;
&lt;p&gt;Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;h5-heading&quot;&gt;h5. Heading&lt;&#x2F;h5&gt;
&lt;p&gt;The information in the front matter is passed into the template before the content is rendered into HTML.&lt;&#x2F;p&gt;
&lt;h6 id=&quot;h6-heading&quot;&gt;h6. Heading&lt;&#x2F;h6&gt;
&lt;p&gt;Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;headings&quot;&gt;Headings&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;h1-heading-1&quot;&gt;h1. Heading&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;h2-heading-1&quot;&gt;h2. Heading&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;h3-heading-1&quot;&gt;h3. Heading&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;h4-heading-1&quot;&gt;h4. Heading&lt;&#x2F;h4&gt;
&lt;h5 id=&quot;h5-heading-1&quot;&gt;h5. Heading&lt;&#x2F;h5&gt;
&lt;h6 id=&quot;h6-heading-1&quot;&gt;h6. Heading&lt;&#x2F;h6&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;multi-line-headings&quot;&gt;Multi-line Headings&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;h1-when-the-pawn-hits-the-conflicts-he-thinks-like-a&quot;&gt;h1. When the Pawn Hits the Conflicts He Thinks like a&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;h2-king-what-he-knows-throws-the-blows-when-he-goes-to-the-fight-and-he-ll-win&quot;&gt;h2. King What He Knows Throws the Blows When He Goes to the Fight and He’ll Win&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;h3-the-whole-thing-he-enters-the-ring-there-s-no-body-to-batter&quot;&gt;h3. The Whole Thing He Enters the Ring There’s No Body to Batter&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;h4-when-your-mind-is-your-might-so-when-you-go-solo-you-hold-your-own-hand-and&quot;&gt;h4. When Your Mind Is Your Might so When You Go Solo You Hold Your Own Hand and&lt;&#x2F;h4&gt;
&lt;h5 id=&quot;h5-remember-that-depth-is-the-greatest-of-heights-and-if-you-know-where-you-stand-then-you-know-where&quot;&gt;h5. Remember That Depth Is the Greatest of Heights and If You Know Where You Stand, Then You Know Where&lt;&#x2F;h5&gt;
&lt;h6 id=&quot;h6-to-land-and-if-you-fall-it-won-t-matter-cuz-you-ll-know-that-you-re-right-fiona-apple&quot;&gt;h6. To Land and If You Fall It Won’t Matter, Cuz You’ll Know That You’re Right Fiona Apple&lt;&#x2F;h6&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;paragraph&quot;&gt;Paragraph&lt;&#x2F;h1&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, &lt;a href=&quot;#&quot; title=&quot;test link&quot;&gt;test link&lt;&#x2F;a&gt; adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;&#x2F;p&gt;
&lt;p&gt;Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.&lt;&#x2F;p&gt;
&lt;p&gt;You have two ways to create a skin. The simplest way is to create it in the layouts&#x2F; directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts&#x2F; directory so it will always find the skin.&lt;&#x2F;p&gt;
&lt;p&gt;Your second choice is to create it in a sub-directory of the themes&#x2F; directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?&lt;&#x2F;p&gt;
&lt;p&gt;The difference between creating a skin in layouts&#x2F; and creating it in themes&#x2F; is very subtle. A skin in layouts&#x2F; can’t be customized without updating the templates and static files that it is built from. A skin created in themes&#x2F;, on the other hand, can be and that makes it easier for other people to use it.&lt;&#x2F;p&gt;
&lt;p&gt;The rest of this tutorial will call a skin created in the themes&#x2F; directory a theme.&lt;&#x2F;p&gt;
&lt;p&gt;Note that you can use this tutorial to create a skin in the layouts&#x2F; directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;list-types&quot;&gt;List Types&lt;&#x2F;h1&gt;
&lt;h3 id=&quot;definition-list&quot;&gt;Definition List&lt;&#x2F;h3&gt;
&lt;dl&gt;
&lt;dt&gt;Definition List Title&lt;&#x2F;dt&gt;
&lt;dd&gt;This is a definition list division.&lt;&#x2F;dd&gt;
&lt;&#x2F;dl&gt;
&lt;h3 id=&quot;ordered-list&quot;&gt;Ordered List&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;List Item 1&lt;&#x2F;li&gt;
&lt;li&gt;List Item 2&lt;&#x2F;li&gt;
&lt;li&gt;List Item 3&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;unordered-list&quot;&gt;Unordered List&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;List Item 1&lt;&#x2F;li&gt;
&lt;li&gt;List Item 2&lt;&#x2F;li&gt;
&lt;li&gt;List Item 3&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;default-ol-ordered-list&quot;&gt;%default-ol Ordered List&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;List Item 1&lt;&#x2F;li&gt;
&lt;li&gt;List Item 2&lt;&#x2F;li&gt;
&lt;li&gt;List Item 3&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;default-ul-unordered-list&quot;&gt;%default-ul Unordered List&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;List Item 1&lt;&#x2F;li&gt;
&lt;li&gt;List Item 2&lt;&#x2F;li&gt;
&lt;li&gt;List Item 3&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;code&quot;&gt;Code&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;## this is a comment
$ echo this is a command
this is a command

## edit the file
$vi foo.md
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
:wq
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;html&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&amp;lt;h1&amp;gt;Hello World&amp;lt;&amp;#x2F;h1&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;go&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;func main() {
  fmt.Println(&amp;#x27;hello world&amp;#x27;);
}
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;## show it
$ cat foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;fieldsets-and-form-elements&quot;&gt;Fieldsets and Form Elements&lt;&#x2F;h1&gt;
&lt;p&gt;TODO: Add fieldsets here&lt;&#x2F;p&gt;
&lt;form&gt;
&lt;h2 id=&quot;form-element&quot;&gt;Form Element&lt;&#x2F;h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;text_field&quot;&gt;Text Field:&lt;&#x2F;label&gt; &lt;input type=&quot;text&quot; id=&quot;text_field&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;text_area&quot;&gt;Text Area:&lt;&#x2F;label&gt;&lt;textarea id=&quot;text_area&quot;&gt;&lt;&#x2F;textarea&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;select_element&quot;&gt;Select Element:&lt;&#x2F;label&gt; &lt;select name=&quot;select_element&quot;&gt;&lt;optgroup label=&quot;Option Group 1&quot;&gt;&lt;option value=&quot;1&quot;&gt;Option 1&lt;&#x2F;option&gt; &lt;option value=&quot;2&quot;&gt;Option 2&lt;&#x2F;option&gt; &lt;option value=&quot;3&quot;&gt;Option 3&lt;&#x2F;option&gt;&lt;&#x2F;optgroup&gt; &lt;optgroup label=&quot;Option Group 2&quot;&gt;&lt;option value=&quot;1&quot;&gt;Option 1&lt;&#x2F;option&gt; &lt;option value=&quot;2&quot;&gt;Option 2&lt;&#x2F;option&gt; &lt;option value=&quot;3&quot;&gt;Option 3&lt;&#x2F;option&gt;&lt;&#x2F;optgroup&gt;&lt;&#x2F;select&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;radio_buttons&quot;&gt;Radio Buttons:&lt;&#x2F;label&gt; &lt;label&gt;&lt;input type=&quot;radio&quot; class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_1&quot;&gt; Radio 1 &lt;&#x2F;label&gt; &lt;label&gt; &lt;input type=&quot;radio&quot; class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_2&quot;&gt; Radio 2 &lt;&#x2F;label&gt; &lt;label&gt;&lt;input type=&quot;radio&quot; class=&quot;radio&quot; name=&quot;radio_button&quot; value=&quot;radio_3&quot;&gt; Radio 3&lt;&#x2F;label&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;checkboxes&quot;&gt;Checkboxes:&lt;&#x2F;label&gt; &lt;label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_1&quot;&gt; Checkbox 1 &lt;&#x2F;label&gt; &lt;label&gt; &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_2&quot;&gt; Checkbox 2 &lt;&#x2F;label&gt; &lt;label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; name=&quot;checkboxes&quot; value=&quot;check_3&quot;&gt; Checkbox 3&lt;&#x2F;label&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;password&quot;&gt;Password:&lt;&#x2F;label&gt; &lt;input type=&quot;password&quot; class=&quot;password&quot; name=&quot;password&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;label for=&quot;file&quot;&gt;File Input:&lt;&#x2F;label&gt; &lt;input type=&quot;file&quot; class=&quot;file&quot; name=&quot;file&quot;&gt;&lt;&#x2F;p&gt;
&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;
&lt;&#x2F;form&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;tables&quot;&gt;Tables&lt;&#x2F;h1&gt;
&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
  &lt;th&gt;Table Header 1&lt;&#x2F;th&gt;
  &lt;th&gt;Table Header 2&lt;&#x2F;th&gt;
  &lt;th&gt;Table Header 3&lt;&#x2F;th&gt;
  &lt;&#x2F;tr&gt;
  &lt;tr&gt;
  &lt;td&gt;Division 1&lt;&#x2F;td&gt;
  &lt;td&gt;Division 2&lt;&#x2F;td&gt;
  &lt;td&gt;Division 3&lt;&#x2F;td&gt;
  &lt;&#x2F;tr&gt;
  &lt;tr class=&quot;even&quot;&gt;
  &lt;td&gt;Division 1&lt;&#x2F;td&gt;
  &lt;td&gt;Division 2&lt;&#x2F;td&gt;
  &lt;td&gt;Division 3&lt;&#x2F;td&gt;
  &lt;&#x2F;tr&gt;
  &lt;tr&gt;
  &lt;td&gt;Division 1&lt;&#x2F;td&gt;
  &lt;td&gt;Division 2&lt;&#x2F;td&gt;
  &lt;td&gt;Division 3&lt;&#x2F;td&gt;
  &lt;&#x2F;tr&gt;
  &lt;&#x2F;tbody&gt;
&lt;&#x2F;table&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pondo</title>
        <published>2016-10-31T18:47:15+00:00</published>
        <updated>2016-10-31T18:47:15+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/pondo/"/>
        <id>https://brainchildprojects.com/projects/pondo/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/pondo/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Spogoto</title>
        <published>2014-10-26T13:07:52+00:00</published>
        <updated>2014-10-26T13:07:52+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/spogoto/"/>
        <id>https://brainchildprojects.com/projects/spogoto/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/spogoto/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Asar Web Framework</title>
        <published>2012-05-17T06:26:38+00:00</published>
        <updated>2012-05-17T06:26:38+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/aswf/"/>
        <id>https://brainchildprojects.com/projects/aswf/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/aswf/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Silly: The Silly Little CLI Tool</title>
        <published>2011-10-23T06:25:01+00:00</published>
        <updated>2011-10-23T06:25:01+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/silly/"/>
        <id>https://brainchildprojects.com/projects/silly/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/silly/"></content>
        
    </entry>
    <entry xml:lang="en">
        <title>Anodoc</title>
        <published>2011-04-15T17:24:27+00:00</published>
        <updated>2011-04-15T17:24:27+00:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/projects/anodoc/"/>
        <id>https://brainchildprojects.com/projects/anodoc/</id>
        
        <content type="html" xml:base="https://brainchildprojects.com/projects/anodoc/"></content>
        
    </entry>
</feed>
