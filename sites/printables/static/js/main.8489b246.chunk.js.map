{"version":3,"sources":["pages/calendar/CustomizeCalendarForm.tsx","pages/calendar/previewUtils.ts","pages/calendar/PreviewCalendar.tsx","pages/calendar/PaperPreview.tsx","pages/calendar/CalendarPage.tsx","components/Hero.tsx","pages/main/MainPage.tsx","components/BaseStyle.tsx","components/PrintablesAppBar.tsx","components/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["calendarFormStyles","makeStyles","theme","wrapper","display","flexDirection","alignItems","form","width","marginTop","spacing","formControl","margin","submit","months","yearOptions","year","end","options","index","push","CustomizeCalendarForm","props","now","onPrint","onChange","currentYear","getFullYear","currentMonth","getMonth","useState","month","data","setData","changeHandler","field","event","updated","Number","parseInt","target","value","classes","className","onSubmit","preventDefault","FormControl","variant","fullWidth","InputLabel","htmlFor","Select","native","name","id","map","Button","type","color","size","dayBefore","date","yesterday","Date","getTime","setDate","getDate","getWeekDates","firstDay","getDay","lastDayN","weeks","notDoneWeek","weekN","n","Error","week","firstDayOfWeekN","i","current","dateFormat","Intl","DateTimeFormat","previewStyles","title","fontSize","fontWeight","fontFamily","wrap","textAlign","flexFlow","contentWrap","flexGrow","calendar","border","borderCollapse","tableLayout","height","headers","textTransform","letterSpacing","padding","body","minHeight","verticalAlign","dateCells","weekIndex","PreviewCalendar","calendarData","referenceDate","Box","format","paperPreviewStyles","paper","position","overflow","borderRadius","boxShadow","content","boxSizing","transformOrigin","PaperPreview","children","orientation","scale","paperMargin","paperStyle","aspectRatio","transform","contentStyles","Paper","style","defaultProps","pageStyles","container","paddingTop","paddingBottom","column","main","maxWidth","flexBasis","sideColumn","CalendarPage","setCalendarData","Grid","item","xs","sm","Typography","component","window","print","heroStyles","heroContent","backgroundColor","palette","grey","Hero","properties","subtitle","Container","align","gutterBottom","paragraph","MainPage","List","ListItem","ListItemText","secondary","to","BaseStyle","CssBaseline","styles","homeLink","textDecoration","PrintablesAppBar","AppBar","Toolbar","IconButton","edge","process","NODE_ENV","PUBLIC_URL","basePath","undefined","createMuiTheme","background","default","App","basename","exact","path","Boolean","location","hostname","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8489b246.chunk.js","sourcesContent":["import React, { FormEvent, ChangeEvent, useState } from 'react';\nimport {\n  Button, Select, FormControl, InputLabel, makeStyles,\n} from '@material-ui/core';\nimport CalendarData from './CalendarData';\n\nconst calendarFormStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1, 0, 0),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport interface CustomizeCalendarFormProps {\n  now: Date,\n  onPrint: (data: CalendarData) => void,\n  onChange: (data: CalendarData) => void,\n}\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nfunction yearOptions(year: number): JSX.Element[] {\n  const start = year - 20;\n  const end = year + 20;\n  const options = [];\n  for (let index = start; index <= end; index += 1) {\n    options.push(<option key={index}>{index}</option>);\n  }\n  return options;\n}\n\nfunction CustomizeCalendarForm(props: CustomizeCalendarFormProps): JSX.Element {\n  const { now, onPrint, onChange } = props;\n  const currentYear = now.getFullYear();\n  const currentMonth = now.getMonth();\n  const [data, setData] = useState({\n    year: currentYear,\n    month: currentMonth,\n  });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onPrint(data);\n  };\n\n  const changeHandler = (field: string) => (event: ChangeEvent<{ value: unknown, }>) => {\n    const updated = {\n      ...data,\n      [field]: Number.parseInt(event.target.value as string, 10),\n    };\n    setData(updated);\n    onChange(updated);\n  };\n\n  const classes = calendarFormStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <form className={classes.form} onSubmit={onSubmit}>\n        <FormControl\n          variant=\"filled\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel htmlFor=\"select-year\">Year</InputLabel>\n          <Select\n            native\n            name=\"year\"\n            id=\"select-year\"\n            value={data.year}\n            fullWidth\n            onChange={changeHandler('year')}\n          >\n            { yearOptions(currentYear) }\n          </Select>\n        </FormControl>\n        <FormControl\n          variant=\"filled\"\n          fullWidth\n          className={classes.formControl}\n        >\n          <InputLabel htmlFor=\"select-month\">Month</InputLabel>\n          <Select\n            native\n            name=\"month\"\n            id=\"select-month\"\n            value={data.month}\n            fullWidth\n            onChange={changeHandler('month')}\n          >\n            {\n              months.map((month, index) => (\n                <option value={index} key={month}>{month}</option>\n              ))\n            }\n          </Select>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.submit}\n        >\n          Print Calendar\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CustomizeCalendarForm;\n","export function dayBefore(date: Date): Date {\n  const yesterday = new Date(date.getTime());\n  yesterday.setDate(yesterday.getDate() - 1);\n  return yesterday;\n}\n\nexport interface DateNumber {\n  value: number;\n  current: boolean;\n}\n\nexport function getWeekDates(date: Date): DateNumber[][] {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDayDate = new Date(year, month);\n  const firstDay = firstDayDate.getDay();\n  const lastDayN = dayBefore(new Date(year, month + 1)).getDate();\n\n  const weeks: DateNumber[][] = [];\n  let notDoneWeek = true;\n  let weekN = 0;\n  let n = 0;\n\n  while (notDoneWeek) {\n    if (weekN > 6) {\n      throw new Error('Too many weeks');\n    }\n    const week: DateNumber[] = [];\n    if (weekN === 0 && firstDay > 0) {\n      const previousMonthLastDayDate = (new Date(year, month, -1)).getDate();\n      const firstDayOfWeekN = previousMonthLastDayDate - firstDay + 2;\n      for (let i = 0; i < firstDay; i += 1) {\n        week.push({\n          value: firstDayOfWeekN + i,\n          current: false,\n        });\n      }\n      for (let i = 0; i < (7 - firstDay); i += 1) {\n        n += 1;\n        week.push({\n          value: n,\n          current: true,\n        });\n      }\n    } else {\n      let current = true;\n      for (let index = 0; index < 7; index += 1) {\n        n += 1;\n        week.push({\n          value: n,\n          current,\n        });\n        if (n === lastDayN) {\n          notDoneWeek = false;\n          n = 0;\n          current = false;\n        }\n      }\n    }\n    weeks.push(week);\n    weekN += 1;\n  }\n\n  return weeks;\n}\n\nexport default {\n  dayBefore,\n  getWeekDates,\n};\n","/* eslint-disable react/no-array-index-key */\nimport { Box, makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nimport CalendarData from './CalendarData';\nimport { DateNumber, getWeekDates } from './previewUtils';\n\nconst dateFormat = new Intl.DateTimeFormat(\n  'en-US',\n  {\n    year: 'numeric',\n    month: 'long',\n  },\n);\n\ninterface PreviewCalendarProps {\n  calendarData: CalendarData,\n}\n\nconst previewStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: '36px',\n    fontWeight: 'normal',\n    fontFamily: '\"Source Sans Pro\"',\n  },\n  wrap: {\n    textAlign: 'center',\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  contentWrap: {\n    flexGrow: 1,\n  },\n  calendar: {\n    width: '100%',\n    border: '1px solid #666',\n    borderCollapse: 'collapse',\n    tableLayout: 'fixed',\n    height: '100%',\n  },\n  headers: {\n    '& > tr': {\n      height: '36px',\n    },\n    '& th': {\n      textTransform: 'uppercase',\n      fontWeight: 'normal',\n      letterSpacing: '0.07em',\n      padding: theme.spacing(1, 0),\n      border: '1px solid #666',\n      borderCollapse: 'collapse',\n      width: `${1.0 / 7}%`,\n      height: '0px',\n      fontSize: '12px',\n      fontFamily: '\"Source Sans Pro\"',\n    },\n  },\n  body: {\n    '& td': {\n      padding: theme.spacing(1),\n      minHeight: '40px',\n      textAlign: 'left',\n      border: '1px solid #666',\n      borderCollapse: 'collapse',\n      verticalAlign: 'top',\n      width: `${1.0 / 7}%`,\n      fontSize: '12px',\n      fontFamily: '\"Source Sans Pro\"',\n    },\n    '& .not-current-month': {\n      color: '#666',\n    },\n  },\n}));\n\nfunction dateCells(week: DateNumber[], weekIndex: number): JSX.Element[] {\n  return (\n    week.map(({ value, current }) => (\n      <td\n        key={`week-${weekIndex}-${value}`}\n        className={current ? 'current-month' : 'not-current-month'}\n      >\n        {value}\n      </td>\n    ))\n  );\n}\n\nfunction PreviewCalendar(props: PreviewCalendarProps): JSX.Element {\n  const { calendarData } = props;\n  const { year, month } = calendarData;\n  const referenceDate = new Date(year, month, 1);\n  const weeks = getWeekDates(referenceDate);\n  const classes = previewStyles();\n\n  return (\n    <Box className={classes.wrap}>\n      <h1 className={classes.title}>{ dateFormat.format(referenceDate) }</h1>\n      <div className={classes.contentWrap}>\n        <table className={classes.calendar}>\n          <thead className={classes.headers}>\n            <tr>\n              <th>Sunday</th>\n              <th>Monday</th>\n              <th>Tuesday</th>\n              <th>Wednesday</th>\n              <th>Thursday</th>\n              <th>Friday</th>\n              <th>Saturday</th>\n            </tr>\n          </thead>\n          <tbody aria-label=\"Dates\" className={`${classes.body} calendar-body`}>\n            {\n              weeks.map((week, index) => (\n                <tr key={`week-${index}`}>\n                  { dateCells(week, index) }\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </Box>\n  );\n}\n\nexport default PreviewCalendar;\n","import React, { ReactNode } from 'react';\nimport { makeStyles, Paper } from '@material-ui/core';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst paperPreviewStyles = makeStyles(() => ({\n  paper: {\n    margin: '0 auto 20px',\n    position: 'relative',\n    overflow: 'hidden',\n\n    '@media print': {\n      borderRadius: 0,\n      boxShadow: 'none',\n      margin: 0,\n    },\n  },\n\n  content: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexGrow: 1,\n    // position: 'absolute',\n    // top: 0,\n    // left: 0,\n    transformOrigin: 'top left',\n\n    '& > h1:first-child': {\n      marginTop: 0,\n    },\n  },\n}));\n\ninterface PaperPreviewProps {\n  children: ReactNode;\n  margin?: string | number;\n  orientation?: string;\n  scale?: number;\n}\n\nfunction PaperPreview({\n  children, margin = '10mm', orientation = 'landscape', scale = 1,\n}: PaperPreviewProps): JSX.Element {\n  const classes = paperPreviewStyles();\n  const paperMargin = typeof margin === 'number' ? `${margin}mm` : margin;\n  const paperStyle: CSSProperties = orientation === 'landscape'\n    ? {\n      aspectRatio: '297 / 210',\n      width: '297mm',\n    }\n    : {\n      aspectRatio: '210 / 297',\n      width: '210mm',\n    };\n\n  if (scale !== 1) {\n    paperStyle.transform = `scale(${scale})`;\n  }\n\n  const contentStyles = orientation === 'landscape'\n    ? {\n      width: '297mm',\n      height: '210mm',\n    }\n    : {\n      width: '210mm',\n      height: '297mm',\n    };\n\n  return (\n    <Paper\n      id=\"printable-paper\"\n      className={`printable-paper ${classes.paper}`}\n      style={paperStyle}\n    >\n      <div\n        className={`${classes.content} printable-paper-content`}\n        style={{ padding: paperMargin, ...contentStyles }}\n      >\n        {children}\n      </div>\n    </Paper>\n  );\n}\n\nPaperPreview.defaultProps = {\n  margin: '10mm',\n  orientation: 'landscape',\n  scale: 1,\n};\n\nexport default PaperPreview;\n","import React, {\n  useState,\n} from 'react';\nimport {\n  Typography, Grid, makeStyles,\n} from '@material-ui/core';\nimport CustomizeCalendarForm from './CustomizeCalendarForm';\nimport CalendarData from './CalendarData';\nimport PreviewCalendar from './PreviewCalendar';\nimport PaperPreview from './PaperPreview';\n\nconst pageStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: '-64px',\n    alignItems: 'stretch',\n\n    '& > .MuiGrid-item': {\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n  },\n  column: {\n  },\n  main: {\n    overflow: 'auto',\n\n    '@media print': {\n      width: '100% !important',\n      maxWidth: 'none',\n      flexBasis: 'auto',\n      overflow: 'visible',\n    },\n  },\n  sideColumn: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nconst CalendarPage = (): JSX.Element => {\n  const now = new Date();\n  const [calendarData, setCalendarData] = useState(({\n    year: now.getFullYear(),\n    month: now.getMonth(),\n  }) as CalendarData);\n  const onPrint = (data: CalendarData): void => {\n    setCalendarData({ ...data });\n    window.print();\n  };\n  const onChange = (data: CalendarData): void => {\n    setCalendarData({ ...data });\n  };\n\n  const classes = pageStyles();\n\n  return (\n    <Grid container spacing={3} className={`${classes.container} print-ignore`}>\n      <Grid item xs={3} sm={2} className={`${classes.column} no-print`}>\n        <section aria-label=\"Customize Calendar\" className={classes.sideColumn}>\n          <Typography variant=\"h5\" component=\"h1\">Calendar</Typography>\n          <CustomizeCalendarForm\n            onPrint={onPrint}\n            onChange={onChange}\n            now={now}\n          />\n        </section>\n      </Grid>\n      <Grid item xs={9} sm={10} className={`${classes.main} print-ignore`}>\n        <section aria-label=\"Preview\">\n          <PaperPreview>\n            <PreviewCalendar calendarData={calendarData} />\n          </PaperPreview>\n        </section>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CalendarPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\n\nconst heroStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(8, 0, 6),\n    textAlign: 'center',\n  },\n}));\n\ninterface HeroProperties {\n  title: string,\n  subtitle: string,\n  children?: JSX.Element,\n}\n\nconst Hero = (properties: HeroProperties): JSX.Element => {\n  const { title, subtitle, children } = properties;\n  const classes = heroStyles();\n  return (\n\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\" component=\"section\" aria-label=\"Hero\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            {subtitle}\n          </Typography>\n        )}\n        { children }\n      </Container>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  List, ListItem, ListItemText, Container,\n} from '@material-ui/core';\nimport Hero from '../../components/Hero';\n\nconst MainPage = (): JSX.Element => (\n  <>\n    <Hero title=\"Printables\" subtitle=\"Printable materials for Education\" />\n    <Container>\n      <List>\n        <ListItem>\n          <ListItemText secondary=\"Generate a printable calendar for the month\">\n            <Link to=\"/calendar\">Calendar</Link>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </Container>\n  </>\n);\n\nexport default MainPage;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst BaseStyle = (): JSX.Element => (\n  <CssBaseline />\n);\n\nexport default BaseStyle;\n","import React from 'react';\nimport {\n  AppBar, IconButton, Toolbar, Typography,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nconst styles = makeStyles(() => ({\n  wrap: {\n    minHeight: 64,\n  },\n  homeLink: {\n    color: 'inherit',\n    textDecoration: 'none',\n\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nconst PrintablesAppBar = (): JSX.Element => {\n  const classes = styles();\n  return (\n    <div className={`${classes.wrap} no-print`}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            <Link to=\"/\" className={classes.homeLink}>\n              Printables\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default PrintablesAppBar;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { createMuiTheme, makeStyles, MuiThemeProvider } from '@material-ui/core';\nimport CalendarPage from '../pages/calendar/CalendarPage';\nimport MainPage from '../pages/main/MainPage';\nimport BaseStyle from './BaseStyle';\nimport PrintablesAppBar from './PrintablesAppBar';\n\nconst { NODE_ENV, PUBLIC_URL } = process.env;\n\nconst basePath = NODE_ENV === 'production'\n  ? PUBLIC_URL\n  : undefined;\n\nconst styles = makeStyles((theme) => ({\n  main: {\n    margin: theme.spacing(0, 3),\n    paddingTop: '76px',\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#f3f3f3',\n    },\n  },\n});\n\nfunction App(): JSX.Element {\n  const classes = styles();\n  return (\n    <Router basename={basePath}>\n      <MuiThemeProvider theme={theme}>\n        <BaseStyle />\n        <PrintablesAppBar />\n        <main className={`${classes.main} print-ignore`}>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/calendar\" component={CalendarPage} />\n        </main>\n      </MuiThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/* eslint-disable promise/always-return */\n/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/.test(window.location.hostname),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (!installingWorker) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        // eslint-disable-next-line promise/no-nesting\n        void navigator.serviceWorker.ready\n          .then((registration) => registration.unregister())\n          .then(() => window.location.reload());\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        void navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        void registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // eslint-disable-next-line promise/always-return\n    void import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport './printing.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}