<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Brainchild Projects - pondo</title>
    <subtitle>A Filipino developer&#x27;s projects, thoughts, and experiments</subtitle>
    <link rel="self" type="application/atom+xml" href="https://brainchildprojects.com/tags/pondo/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://brainchildprojects.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2017-10-12T00:08:01+08:00</updated>
    <id>https://brainchildprojects.com/tags/pondo/atom.xml</id>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks Part 3: Pondo Cleanup</title>
        <published>2017-10-12T00:08:01+08:00</published>
        <updated>2017-10-12T00:08:01+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-3-pondo-cleanup/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-3-pondo-cleanup/</id>
        
        <summary type="html">&lt;p&gt;This is Part 3 of a series of posts about refactoring
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Nitrolinks&lt;&#x2F;a&gt;
out of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt;. Last time we’ve
&lt;a href=&quot;https:&#x2F;&#x2F;brainchildprojects.com&#x2F;posts&#x2F;refactoring-nitrolinks-part-2-tests-for-a-rails-engine&#x2F;&quot;&gt;successfully copied the Nitrolinks tests from Pondo&lt;&#x2F;a&gt;
but left the original tests on Pondo. This time we’ll move them out of Pondo for
good.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks, Part 2: Tests for a Rails Engine</title>
        <published>2017-10-11T18:00:33+08:00</published>
        <updated>2017-10-11T18:00:33+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-2-tests-for-a-rails-engine/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-2-tests-for-a-rails-engine/</id>
        
        <summary type="html">&lt;p&gt;This is Part 2 of a series of posts about refactoring
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Nitrolinks&lt;&#x2F;a&gt;
out of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt;. Last time we’ve
&lt;a href=&quot;https:&#x2F;&#x2F;brainchildprojects.com&#x2F;posts&#x2F;refactoring-nitrolinks-part-1-creating-a-gem&#x2F;&quot;&gt;successfully moved Nitrolinks out of Pondo&lt;&#x2F;a&gt;
but we left most of the Nitrolinks-specific tests on the Pondo source code
itself. This time we’ll move the tests to Nitrolinks so we can narrow Pondo’s
test concerns.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Refactoring Nitrolinks, Part 1: Creating a Gem</title>
        <published>2017-09-20T06:33:29+08:00</published>
        <updated>2017-09-20T06:33:29+08:00</updated>
        
        <author>
          <name>
            
              Wayne Duran
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://brainchildprojects.com/posts/refactoring-nitrolinks-part-1-creating-a-gem/"/>
        <id>https://brainchildprojects.com/posts/refactoring-nitrolinks-part-1-creating-a-gem/</id>
        
        <summary type="html">&lt;p&gt;I am building &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asartalo&#x2F;pondo&quot;&gt;Pondo&lt;&#x2F;a&gt; as an experiment on how
to build a functional, modern web application without necessarily using a large
front-end framework (e.g. Angular, Ember, React). The idea is to mostly develop
applications as one would within the usual semantics of the normal
Request-Response cycle. If you’ve used &lt;a href=&quot;https:&#x2F;&#x2F;yuilibrary.com&#x2F;yui&#x2F;docs&#x2F;pjax&#x2F;&quot;&gt;Pjax&lt;&#x2F;a&gt;,
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turbolinks&#x2F;turbolinks&quot;&gt;Turbolinks&lt;&#x2F;a&gt; then you’re familiar
with this.</summary>
        
    </entry>
</feed>
